{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/before-and-after-slider/before-and-after-slider.component.html","./src/app/modules/projects/pages/index/index.page.html","./node_modules/tslib/tslib.es6.js","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/before-and-after-slider/before-and-after-slider.component.scss","./src/app/components/before-and-after-slider/before-and-after-slider.component.ts","./src/app/components/components.module.ts","./src/app/modules/projects/pages/index/index.page.scss","./src/app/modules/projects/pages/index/index.page.ts","./src/app/modules/projects/projects.module.ts","./src/app/modules/projects/projects.routes.ts","./src/environments/environment.ts","./src/main.ts","./src/services/analyses/analyses.service.ts","./src/services/analyses/analysis.ts","./src/services/analyses/embedding.ts","./src/services/attributions/attribution.ts","./src/services/attributions/attributions.service.ts","./src/services/colorMaps/color-map.ts","./src/services/colorMaps/color-maps.service.ts","./src/services/dataset/dataset.service.ts","./src/services/dataset/sample.ts","./src/services/projects/analysis-category.ts","./src/services/projects/analysis-method.ts","./src/services/projects/project.ts","./src/services/projects/projects.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n<div class=\\\"main-container\\\">\\n    <header class=\\\"header header-3\\\">\\n        <div class=\\\"branding\\\">\\n            <a href=\\\"/\\\" class=\\\"nav-link\\\">\\n                <span class=\\\"vispr-logo\\\"></span>\\n                <span class=\\\"title\\\">VISPR</span>\\n            </a>\\n        </div>\\n\\n        <div *ngIf=\\\"projects\\\" class=\\\"header-nav\\\">\\n            <a *ngFor=\\\"let project of projects\\\" routerLink=\\\"/projects/{{ project.id }}\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">{{ project.name }}</a>\\n        </div>\\n    </header>\\n\\n    <div class=\\\"content-container\\\">\\n        <div class=\\\"content-area\\\">\\n            <router-outlet>\\n                <span *ngIf=\\\"isLoadingProjects\\\" class=\\\"spinner spinner-centered\\\"></span>\\n            </router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"\\n<div class=\\\"before-and-after-slider-container\\\">\\n    <div #sliderHandle class=\\\"slider-handle\\\"></div>\\n    <img #beforeImage class=\\\"before-image\\\" [src]=\\\"beforeImageSource\\\" [alt]=\\\"alt\\\" />\\n    <img #afterImage class=\\\"after-image\\\" [src]=\\\"afterImageSource\\\" [alt]=\\\"alt\\\" />\\n</div>\\n\"","export default \"\\n<span *ngIf=\\\"isLoading\\\" class=\\\"spinner spinner-centered\\\"></span>\\n\\n<div *ngIf=\\\"project\\\" id=\\\"panels-container\\\">\\n\\n    <aside id=\\\"options-pane\\\">\\n        <clr-select-container>\\n            <label>Analysis method</label>\\n            <select clrSelect name=\\\"analysis-method\\\" [(ngModel)]=\\\"selectedAnalysisMethod\\\">\\n                <option *ngIf=\\\"!selectedAnalysisMethod\\\" [ngValue]=\\\"null\\\">Select an analysis method...</option>\\n                <option *ngFor=\\\"let analysisMethod of project.analysisMethods\\\" [ngValue]=\\\"analysisMethod\\\">{{ analysisMethod.name }}</option>\\n            </select>\\n        </clr-select-container>\\n        <clr-select-container *ngIf=\\\"selectedAnalysisMethod\\\">\\n            <label>Category</label>\\n            <select clrSelect name=\\\"category\\\" [(ngModel)]=\\\"selectedCategory\\\">\\n                <option *ngIf=\\\"!selectedCategory\\\" [ngValue]=\\\"null\\\">Select a category...</option>\\n                <option *ngFor=\\\"let category of selectedAnalysisMethod.categories\\\" [ngValue]=\\\"category\\\">{{ category.humanReadableName }} ({{ category.name }})</option>\\n            </select>\\n        </clr-select-container>\\n        <clr-select-container *ngIf=\\\"selectedAnalysisMethod\\\">\\n            <label>Clustering</label>\\n            <select clrSelect class=\\\"full-width\\\" name=\\\"clustering\\\" [(ngModel)]=\\\"selectedClustering\\\">\\n                <option *ngIf=\\\"!selectedClustering\\\" [ngValue]=\\\"null\\\">Select a clustering...</option>\\n                <option *ngFor=\\\"let clustering of selectedAnalysisMethod.clusterings\\\" [value]=\\\"clustering\\\">{{ clustering }}</option>\\n            </select>\\n        </clr-select-container>\\n        <clr-select-container *ngIf=\\\"selectedAnalysisMethod\\\">\\n            <label>Embedding</label>\\n            <select clrSelect name=\\\"embedding\\\" [(ngModel)]=\\\"selectedEmbedding\\\">\\n                <option *ngIf=\\\"!selectedEmbedding\\\" [ngValue]=\\\"null\\\">Select a embedding...</option>\\n                <option *ngFor=\\\"let embedding of selectedAnalysisMethod.embeddings\\\" [value]=\\\"embedding\\\">{{ embedding }}</option>\\n            </select>\\n        </clr-select-container>\\n        <clr-select-container *ngIf=\\\"embeddingDimensions && embeddingDimensions.length > 2\\\">\\n            <label>X-Axis</label>\\n            <select clrSelect name=\\\"horizontal-axis-dimension-index\\\" [(ngModel)]=\\\"horizontalAxisDimensionIndex\\\">\\n                <option *ngFor=\\\"let index of embeddingDimensions\\\" [value]=\\\"index\\\">{{ index }}</option>\\n            </select>\\n        </clr-select-container>\\n        <clr-select-container *ngIf=\\\"embeddingDimensions && embeddingDimensions.length > 2\\\">\\n            <label>Y-Axis</label>\\n            <select clrSelect name=\\\"vertical-axis-dimension-index\\\" [(ngModel)]=\\\"verticalAxisDimensionIndex\\\">\\n                <option *ngFor=\\\"let index of embeddingDimensions\\\" [value]=\\\"index\\\">{{ index }}</option>\\n            </select>\\n        </clr-select-container>\\n        <clr-select-container *ngIf=\\\"colorMaps\\\">\\n            <label>Color map</label>\\n            <select clrSelect name=\\\"color-map\\\" [(ngModel)]=\\\"selectedColorMap\\\">\\n                <option *ngIf=\\\"!selectedColorMap\\\" [ngValue]=\\\"null\\\">Select a color map...</option>\\n                <option *ngFor=\\\"let colorMap of colorMaps\\\" [ngValue]=\\\"colorMap\\\">{{ colorMap.humanReadableName }}</option>\\n            </select>\\n        </clr-select-container>\\n        <img *ngIf=\\\"selectedColorMap\\\" [src]=\\\"selectedColorMap.url\\\" [alt]=\\\"selectedColorMap.humanReadableName\\\" />\\n    </aside>\\n\\n    <section id=\\\"embedding-plot\\\">\\n        <plotly-plot\\n            *ngIf=\\\"graphData\\\"\\n            [data]=\\\"graphData\\\"\\n            [layout]=\\\"graphLayout\\\"\\n            [useResizeHandler]=\\\"true\\\"\\n            [style]=\\\"{ width: '100%', height: '100%' }\\\"\\n            (hover)=\\\"onHoverAsync($event)\\\"\\n            (unhover)=\\\"onUnhover($event)\\\"\\n            (selected)=\\\"onSelectedAsync($event)\\\"\\n            (deselect)=\\\"onDeselect()\\\">\\n        </plotly-plot>\\n\\n        <img\\n            id=\\\"attribution-hover-preview\\\"\\n            *ngIf=\\\"datasetSampleHoverPreview && isHovering\\\"\\n            [src]=\\\"datasetSampleHoverPreview.url\\\"\\n            [alt]=\\\"datasetSampleHoverPreview.labelDisplay\\\"\\n        />\\n    </section>\\n\\n    <aside id=\\\"selected-data-points\\\">\\n        <span *ngIf=\\\"isLoadingSelection\\\" class=\\\"spinner spinner-locally-centered\\\"></span>\\n\\n        <div *ngIf=\\\"!isLoadingSelection && (!selectedDataPoints || selectedDataPoints.length === 0)\\\" id=\\\"selection-hint\\\">\\n            <p>Select data points to display attributions...</p>\\n        </div>\\n\\n        <div *ngIf=\\\"!isLoadingSelection && selectedDataPoints && selectedDataPoints.length > 0\\\" id=\\\"data-point-list\\\">\\n            <div *ngFor=\\\"let dataPoint of selectedDataPoints\\\" class=\\\"embedding\\\" [title]=\\\"dataPoint.attribution.labelDisplay\\\">\\n                <app-before-and-after-slider\\n                    [beforeImageSource]=\\\"dataPoint.attribution.urls[selectedColorMap.name]\\\"\\n                    [afterImageSource]=\\\"dataPoint.sample.url\\\"\\n                    [alt]=\\\"dataPoint.attribution.labelDisplay\\\">\\n                </app-before-and-after-slider>\\n                <p><span [style.color]=\\\"dataPoint.color\\\">&#11044;</span> Cluster {{ dataPoint.clusterIndex + 1 }}</p>\\n            </div>\\n        </div>\\n    </aside>\\n\\n    <footer id=\\\"status-bar\\\">\\n        <clr-icon shape=\\\"library\\\"></clr-icon> <strong>Project:</strong> {{ project.name }}\\n        <clr-icon shape=\\\"storage\\\"></clr-icon> <strong>Dataset:</strong> {{ project.dataset }}\\n        <clr-icon shape=\\\"organization\\\"></clr-icon> <strong>Model:</strong> {{ project.model }}\\n    </footer>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \".vispr-logo {\\n  background-image: url(/assets/images/vispr-logo.png);\\n  background-size: 36px 36px;\\n  margin-right: 11px;\\n  height: 36px;\\n  width: 36px;\\n}\\n\\n.content-area {\\n  padding: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RuZXVtYW5uL1JlcG9zaXRvcmllcy9zcHJpbmNsL3Zpc3ByX3ZuZXh0L2Zyb250ZW5kL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxvREFBQTtFQUNBLDBCQUFBO0VBQ0gsa0JBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQ0FEOztBREdBO0VBQ0MscUJBQUE7QUNBRCIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnZpc3ByLWxvZ28ge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgvYXNzZXRzL2ltYWdlcy92aXNwci1sb2dvLnBuZyk7XG4gICAgYmFja2dyb3VuZC1zaXplOiAzNnB4IDM2cHg7XG5cdG1hcmdpbi1yaWdodDogMTFweDtcblx0aGVpZ2h0OiAzNnB4O1xuXHR3aWR0aDogMzZweDtcbn1cblxuLmNvbnRlbnQtYXJlYSB7XG5cdHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbn1cbiIsIi52aXNwci1sb2dvIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1hZ2VzL3Zpc3ByLWxvZ28ucG5nKTtcbiAgYmFja2dyb3VuZC1zaXplOiAzNnB4IDM2cHg7XG4gIG1hcmdpbi1yaWdodDogMTFweDtcbiAgaGVpZ2h0OiAzNnB4O1xuICB3aWR0aDogMzZweDtcbn1cblxuLmNvbnRlbnQtYXJlYSB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbn0iXX0= */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProjectsService } from 'src/services/projects/projects.service';\nimport { Project } from 'src/services/projects/project';\n\n/**\n * Represents the app component, which is the entry-point to the VISPR application.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n    /**\n     * Initializes a new AppComponent instance.\n     * @param projectsService The projects service, which is used to load the projects of the current workspace.\n     * @param router The router, which is used to navigate to the projects.\n     */\n    public constructor(private projectsService: ProjectsService, private router: Router) { }\n\n    /**\n     * Contains a value that determines whether the projects are currently being loaded.\n     */\n    public isLoadingProjects: boolean;\n\n    /**\n     * Contains the projects of the current workspace.\n     */\n    public projects: Array<Project>;\n\n    /**\n     * Is invoked when the app component is being initialized. Loads the projects from the server.\n     */\n    public async ngOnInit(): Promise<void> {\n\n        // Loads the projects from the RESTful API\n        this.isLoadingProjects = true;\n        this.projects = await this.projectsService.getAsync();\n        this.isLoadingProjects = false;\n\n        // Navigates the user to the first project\n        this.router.navigate(['projects', this.projects[0].id]);\n    }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ProjectsService } from 'src/services/projects/projects.service';\nimport { ProjectsModule } from './modules/projects/projects.module';\nimport { AnalysesService } from 'src/services/analyses/analyses.service';\nimport { AttributionsService } from 'src/services/attributions/attributions.service';\nimport { DatasetService } from 'src/services/dataset/dataset.service';\nimport { ColorMapsService } from 'src/services/colorMaps/color-maps.service';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        ClarityModule,\n        BrowserAnimationsModule,\n        ProjectsModule,\n        RouterModule.forRoot([])\n    ],\n    providers: [\n        ProjectsService,\n        AnalysesService,\n        AttributionsService,\n        DatasetService,\n        ColorMapsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"img {\\n  width: 100%;\\n  vertical-align: middle;\\n}\\n\\n.before-and-after-slider-container, img, .slider-handle {\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.before-and-after-slider-container {\\n  position: relative;\\n}\\n\\n.before-image {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.slider-handle {\\n  position: absolute;\\n  width: 200px;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  z-index: 10;\\n}\\n\\n.slider-handle:before, .slider-handle:after {\\n  position: absolute;\\n  left: 50%;\\n  content: \\\"\\\";\\n  background: white;\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\\n.slider-handle:before {\\n  top: 0;\\n  transform: translateX(-50%);\\n  width: 1px;\\n  height: 100%;\\n}\\n\\n.slider-handle:after {\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n  width: 5px;\\n  height: 33%;\\n  border-radius: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RuZXVtYW5uL1JlcG9zaXRvcmllcy9zcHJpbmNsL3Zpc3ByX3ZuZXh0L2Zyb250ZW5kL3NyYy9hcHAvY29tcG9uZW50cy9iZWZvcmUtYW5kLWFmdGVyLXNsaWRlci9iZWZvcmUtYW5kLWFmdGVyLXNsaWRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9iZWZvcmUtYW5kLWFmdGVyLXNsaWRlci9iZWZvcmUtYW5kLWFmdGVyLXNsaWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFdBQUE7RUFDQSxzQkFBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7RUFDQSx5QkFBQTtLQUFBLHNCQUFBO01BQUEscUJBQUE7VUFBQSxpQkFBQTtBQ0FKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7QUNBSjs7QURFSTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLG9CQUFBO0VBQUEsWUFBQTtBQ0FSOztBREdJO0VBQ0ksTUFBQTtFQUNBLDJCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7QUNEUjs7QURJSTtFQUNJLFFBQUE7RUFDQSxnQ0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUNGUiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmVmb3JlLWFuZC1hZnRlci1zbGlkZXIvYmVmb3JlLWFuZC1hZnRlci1zbGlkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmJlZm9yZS1hbmQtYWZ0ZXItc2xpZGVyLWNvbnRhaW5lciwgaW1nLCAuc2xpZGVyLWhhbmRsZSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLmJlZm9yZS1hbmQtYWZ0ZXItc2xpZGVyLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYmVmb3JlLWltYWdlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG59XG5cbi5zbGlkZXItaGFuZGxlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB6LWluZGV4OiAxMDtcblxuICAgICY6YmVmb3JlLCAmOmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICBjdXJzb3I6IGdyYWI7XG4gICAgfVxuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgd2lkdGg6IDFweDtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIHdpZHRoOiA1cHg7XG4gICAgICAgIGhlaWdodDogMzMlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgfVxufVxuIiwiaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5iZWZvcmUtYW5kLWFmdGVyLXNsaWRlci1jb250YWluZXIsIGltZywgLnNsaWRlci1oYW5kbGUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLmJlZm9yZS1hbmQtYWZ0ZXItc2xpZGVyLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmJlZm9yZS1pbWFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4uc2xpZGVyLWhhbmRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTA7XG59XG4uc2xpZGVyLWhhbmRsZTpiZWZvcmUsIC5zbGlkZXItaGFuZGxlOmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjdXJzb3I6IGdyYWI7XG59XG4uc2xpZGVyLWhhbmRsZTpiZWZvcmUge1xuICB0b3A6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLnNsaWRlci1oYW5kbGU6YWZ0ZXIge1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiA1cHg7XG4gIGhlaWdodDogMzMlO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59Il19 */\"","\nimport { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\n/**\n * Represents a slider, which shows a before and after image.\n */\n@Component({\n    selector: 'app-before-and-after-slider',\n    styleUrls: ['before-and-after-slider.component.scss'],\n    templateUrl: 'before-and-after-slider.component.html'\n})\nexport class BeforeAndAfterSliderComponent implements AfterViewInit {\n\n    /**\n     * Contains a reference to the HTML element that represents the slider handle.\n     */\n    @ViewChild('sliderHandle', { static: false })\n    public sliderHandle: ElementRef;\n\n    /**\n     * Contains a reference to the HTML element that represents the before image.\n     */\n    @ViewChild('beforeImage', { static: false })\n    public beforeImage: ElementRef;\n\n    /**\n     * Contains a reference to the HTML element that represents the after image.\n     */\n    @ViewChild('afterImage', { static: false })\n    public afterImage: ElementRef;\n\n    /**\n     * Contains the source of the before image.\n     */\n    @Input()\n    public beforeImageSource: string;\n\n    /**\n     * Contains the source of the after image.\n     */\n    @Input()\n    public afterImageSource: string;\n\n    /**\n     * An alternative string, which is displayed when an image cannot be loaded.\n     */\n    @Input()\n    public alt: string;\n\n    /**\n     * Is invoked when the view of component was properly initialized.\n     */\n    public ngAfterViewInit(): void {\n        const sliderHandle: HTMLDivElement = this.sliderHandle.nativeElement as HTMLDivElement;\n        const beforeImage: HTMLImageElement = this.beforeImage.nativeElement as HTMLImageElement;\n\n        const sliderHandleWidth = sliderHandle.getBoundingClientRect().width;\n        const imageWidth = beforeImage.getBoundingClientRect().width;\n\n        sliderHandle.style.left = `${imageWidth / 2 - sliderHandleWidth / 2}px`;\n        beforeImage.style.clip = `rect(0px, ${imageWidth / 2}px, 999px, 0px)`;\n\n        let isMouseDown = false;\n        let sliderHandlePosition: number;\n        sliderHandle.addEventListener('mousedown', event => {\n            sliderHandlePosition = event.clientX;\n            isMouseDown = true;\n        });\n        document.addEventListener('mouseup', _ => isMouseDown = false);\n        document.addEventListener('mouseleave', _ => isMouseDown = false);\n        sliderHandle.addEventListener('mousemove', event => {\n            if (isMouseDown) {\n                sliderHandle.style.left = `${parseInt(sliderHandle.style.left, 10) + (event.clientX - sliderHandlePosition)}px`;\n                sliderHandlePosition = event.clientX;\n                beforeImage.style.clip = `rect(0px, ${sliderHandle.getBoundingClientRect().width / 2 + parseInt(sliderHandle.style.left, 10)}px, ${sliderHandle.getBoundingClientRect().height}px, 0px)`;\n            }\n        });\n    }\n}\n","\nimport { NgModule } from '@angular/core';\n\nimport { BeforeAndAfterSliderComponent } from './before-and-after-slider/before-and-after-slider.component';\n\n/**\n * Represents the module for application-wide components.\n */\n@NgModule({\n    declarations: [\n        BeforeAndAfterSliderComponent\n    ],\n    exports: [\n        BeforeAndAfterSliderComponent\n    ]\n})\nexport class ComponentsModule { }\n","export default \"#panels-container {\\n  display: grid;\\n  grid-template-rows: 85px 1fr 35px;\\n  grid-template-columns: 1fr 250px;\\n  grid-template-areas: \\\"options-pane options-pane\\\" \\\"embedding-plot selected-data-points\\\" \\\"status-bar status-bar\\\";\\n}\\n#panels-container #embedding-plot {\\n  grid-area: embedding-plot;\\n  width: calc(100vw - 250px);\\n  height: calc(100vh - 180px);\\n}\\n#panels-container #embedding-plot #attribution-hover-preview {\\n  position: absolute;\\n  top: 169px;\\n  left: 24px;\\n  z-index: 9999;\\n}\\n#panels-container #options-pane {\\n  grid-area: options-pane;\\n  display: flex;\\n  align-items: center;\\n  background-color: #EFEFEF;\\n  margin: 0;\\n  z-index: 1;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n}\\n#panels-container #options-pane clr-select-container, #panels-container #options-pane img {\\n  margin: 0 0 0 24px;\\n}\\n#panels-container #options-pane img {\\n  padding-right: 24px;\\n  width: 174px;\\n  height: 40px;\\n}\\n#panels-container #selected-data-points {\\n  grid-area: selected-data-points;\\n  height: calc(100vh - 180px);\\n  background-color: #EFEFEF;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n}\\n#panels-container #selected-data-points .spinner-locally-centered {\\n  position: relative;\\n  top: calc(50% - 1.5rem);\\n  left: calc(50% - 1.5rem);\\n}\\n#panels-container #selected-data-points #selection-hint {\\n  display: table;\\n  height: calc(100% - 12px);\\n  margin: 0 12px 12px 12px;\\n  border: 1px dashed silver;\\n  border-radius: 5px;\\n  text-align: center;\\n}\\n#panels-container #selected-data-points #selection-hint p {\\n  vertical-align: middle;\\n  display: table-cell;\\n}\\n#panels-container #selected-data-points #data-point-list {\\n  margin: 12px;\\n}\\n#panels-container #selected-data-points #data-point-list:first-child {\\n  margin-top: 0;\\n}\\n#panels-container #selected-data-points #data-point-list .embedding {\\n  margin-bottom: 12px;\\n}\\n#panels-container #selected-data-points #data-point-list .embedding:last-child {\\n  margin-bottom: 0;\\n}\\n#panels-container #selected-data-points #data-point-list p {\\n  margin-top: 6px;\\n}\\n#panels-container #status-bar {\\n  grid-area: status-bar;\\n  display: flex;\\n  align-items: center;\\n  padding-left: 1rem;\\n  z-index: 1;\\n  background-color: #271335;\\n  color: white;\\n}\\n#panels-container #status-bar strong {\\n  margin-left: 5px;\\n  margin-right: 5px;\\n}\\n#panels-container #status-bar clr-icon:not(:first-child) {\\n  margin-left: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","\nimport { Component, OnInit } from '@angular/core';\n\nimport { Plotly } from 'plotly.js/dist/plotly.js';\nimport { ProjectsService } from 'src/services/projects/projects.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from 'src/services/projects/project';\nimport { AnalysisMethod } from 'src/services/projects/analysis-method';\nimport { AnalysesService } from 'src/services/analyses/analyses.service';\nimport { Analysis } from 'src/services/analyses/analysis';\nimport { AnalysisCategory } from 'src/services/projects/analysis-category';\nimport { AttributionsService } from 'src/services/attributions/attributions.service';\nimport { Sample } from 'src/services/dataset/sample';\nimport { DatasetService } from 'src/services/dataset/dataset.service';\nimport { Attribution } from 'src/services/attributions/attribution';\nimport { ColorMapsService } from 'src/services/colorMaps/color-maps.service';\nimport { ColorMap } from 'src/services/colorMaps/color-map';\nimport * as d3 from 'd3';\n\n/**\n * Represents the index page of a project\n */\n@Component({\n    selector: 'page-projects-index',\n    styleUrls: ['index.page.scss'],\n    templateUrl: 'index.page.html'\n})\nexport class IndexPage implements OnInit {\n\n    /**\n     * Initializes a new IndexPage instance.\n     * @param projectsService The service which is used to manage projects.\n     * @param analysesService The service which is used to manage analyses.\n     * @param attributionsService The service which is used to manage attributions.\n     * @param datasetService The service which is used to manage the datasets.\n     * @param colorMapsService The service which is used to manage color maps.\n     * @param route The currently activated route.\n     */\n    public constructor(\n        private projectsService: ProjectsService,\n        private analysesService: AnalysesService,\n        private attributionsService: AttributionsService,\n        private datasetService: DatasetService,\n        private colorMapsService: ColorMapsService,\n        private route: ActivatedRoute\n    ) { }\n\n    /**\n     * Contains a value that determines whether the component is currently loading data from the RESTful API.\n     */\n    public isLoading: boolean;\n\n    /**\n     * Contains a value that determines whether the selected attributions and dataset samples are currently being loaded\n     * from the RESTful API.\n     */\n    public isLoadingSelection: boolean;\n\n    /**\n     * Contains the ID of the project.\n     */\n    public id: number;\n\n    /**\n     * Contains the project that is being displayed.\n     */\n    public project: Project;\n\n    /**\n     * Contains a value that determines whether the user is currently hovering the mouse over a data point.\n     */\n    public isHovering: boolean;\n\n    /**\n     * Contains the dataset sample of the embedding that the user is currently hovering its mouse over.\n     */\n    public datasetSampleHoverPreview: Sample;\n\n    /**\n     * Gets a list of all the dimensions that are available in the currently selected embedding.\n     */\n    public get embeddingDimensions(): Array<number> {\n        if (!this.analysis || this.analysis.embedding.length === 0) {\n            return new Array();\n        }\n        return new Array(this.analysis.embedding[0].value.length).fill(0).map((_, index) => index);\n    }\n\n    /**\n     * Contains the index of the dimension of the embedding that is to be displayed in the plot.\n     */\n    private _horizontalAxisDimensionIndex = 0;\n\n    /**\n     * Gets the index of the dimension of the embedding that is to be displayed in the plot.\n     */\n    public get horizontalAxisDimensionIndex(): number {\n        return this._horizontalAxisDimensionIndex;\n    }\n\n    /**\n     * Sets the index of the dimension of the embedding that is to be displayed in the plot.\n     */\n    public set horizontalAxisDimensionIndex(value: number) {\n        this._horizontalAxisDimensionIndex = value;\n        this.refreshPlot();\n    }\n\n    /**\n     * Contains the index of the dimension of the embedding that is to be displayed in the plot.\n     */\n    private _verticalAxisDimensionIndex = 1;\n\n    /**\n     * Gets the index of the dimension of the embedding that is to be displayed in the plot.\n     */\n    public get verticalAxisDimensionIndex(): number {\n        return this._verticalAxisDimensionIndex;\n    }\n\n    /**\n     * Sets the index of the dimension of the embedding that is to be displayed in the plot.\n     */\n    public set verticalAxisDimensionIndex(value: number) {\n        this._verticalAxisDimensionIndex = value;\n        this.refreshPlot();\n    }\n\n    /**\n     * Contains the color maps from which the user can choose one for rendering the heatmaps.\n     */\n    public colorMaps: Array<ColorMap>;\n\n    /**\n     * Contains the color map that was selected by the user for rendering the heatmaps.\n     */\n    public selectedColorMap: ColorMap;\n\n    /**\n     * Contains the analysis method that was selected by the user.\n     */\n    private _selectedAnalysisMethod: AnalysisMethod;\n\n    /**\n     * Gets the analysis method that was selected by the user.\n     */\n    public get selectedAnalysisMethod(): AnalysisMethod {\n        return this._selectedAnalysisMethod;\n    }\n\n    /**\n     * Sets the analysis method that was selected by the user.\n     */\n    public set selectedAnalysisMethod(value: AnalysisMethod) {\n        this._selectedAnalysisMethod = value;\n        if (value) {\n            this.selectedCategory = this.selectedAnalysisMethod.categories[0];\n            this.selectedClustering = this.selectedAnalysisMethod.clusterings[0];\n            if (this.selectedAnalysisMethod.embeddings.filter(embedding => embedding === 'tsne').length > 0) {\n                this.selectedEmbedding = 'tsne';\n            } else {\n                this.selectedEmbedding = this.selectedAnalysisMethod.embeddings[0];\n            }\n            this.refreshAnalysisAsync();\n        }\n    }\n\n    /**\n     * Contains the name of the selected category.\n     */\n    private _selectedCategory: AnalysisCategory;\n\n    /**\n     * Gets the name of the selected category.\n     */\n    public get selectedCategory(): AnalysisCategory {\n        return this._selectedCategory;\n    }\n\n    /**\n     * Sets the name of the selected category.\n     */\n    public set selectedCategory(value: AnalysisCategory) {\n        this._selectedCategory = value;\n        if (value) {\n            this.refreshAnalysisAsync();\n        }\n    }\n\n    /**\n     * Contains the name of the selected clustering.\n     */\n    private _selectedClustering: string;\n\n    /**\n     * Gets the name of the selected clustering.\n     */\n    public get selectedClustering(): string {\n        return this._selectedClustering;\n    }\n\n    /**\n     * Sets the name of the selected clustering.\n     */\n    public set selectedClustering(value: string) {\n        this._selectedClustering = value;\n        if (value) {\n            this.refreshAnalysisAsync();\n        }\n    }\n\n    /**\n     * Contains the name of the selected embedding.\n     */\n    private _selectedEmbedding: string;\n\n    /**\n     * Gets the name of the selected embedding.\n     */\n    public get selectedEmbedding(): string {\n        return this._selectedEmbedding;\n    }\n\n    /**\n     * Sets the name of the selected embedding.\n     */\n    public set selectedEmbedding(value: string) {\n        this._selectedEmbedding = value;\n        this._horizontalAxisDimensionIndex = 0;\n        this._verticalAxisDimensionIndex = 1;\n        if (value) {\n            this.refreshAnalysisAsync();\n        }\n    }\n\n    /**\n     * Contains the current analysis.\n     */\n    private _analysis: Analysis;\n\n    /**\n     * Gets the current analysis.\n     */\n    public get analysis(): Analysis {\n        return this._analysis;\n    }\n\n    /**\n     * Sets the current analysis.\n     * @param value The\n     */\n    public set analysis(value: Analysis) {\n        this._analysis = value;\n        this.refreshPlot();\n    }\n\n    /**\n     * Contains the data of the PlotlyJS graph.\n     */\n    public graphData: Array<Plotly.Data>;\n\n    /**\n     * Contains the layout of the PlotlyJS graph.\n     */\n    public graphLayout: Partial<Plotly.Layout> = {\n        autosize: true,\n        dragmode: 'lasso',\n        hovermode: 'closest',\n        hoverdistance: 1,\n        showlegend: false,\n        margin: {\n            l: 0,\n            r: 0,\n            t: 0,\n            b: 0,\n            pad: 0\n        },\n        xaxis: {\n            showgrid: false,\n            zeroline: false,\n            showticklabels: false\n        },\n        yaxis: {\n            showgrid: false,\n            zeroline: false,\n            showticklabels: false\n        },\n        paper_bgcolor: '#00000000',\n        plot_bgcolor: '#00000000'\n    };\n\n    /**\n     * Contains the data points that were selected by the user.\n     */\n    public selectedDataPoints: Array<{\n        attribution: Attribution,\n        sample: Sample,\n        color: string,\n        clusterIndex: number\n    }>;\n\n    /**\n     * Generates a unique color for the specified cluster (ploty.js, unfortunately only uses 10 different colors by\n     * default, but there are options for more clusters in VISPR).\n     * @param index The index of the cluster for which the color is to be generated.\n     * @param total The total number of clusters.\n     */\n    private generateClusterColor(index: number, total: number): string {\n        return d3.hsl(360 / total * index, 1.0, 0.5).toString();\n    }\n\n    /**\n     * Refreshes the plot.\n     */\n    private refreshPlot(): void {\n\n        if (!this.analysis) {\n            return;\n        }\n\n        const clusters = new Array<number>();\n        for (const cluster of this.analysis.embedding.map(embedding => embedding.cluster)) {\n            if (clusters.indexOf(cluster) === -1) {\n                clusters.push(cluster);\n            }\n        }\n\n        this.graphData = new Array<Plotly.Data>();\n        for (const cluster of clusters) {\n            const embeddingsInCluster = this.analysis.embedding.filter(embedding => embedding.cluster === cluster);\n            this.graphData.push({\n                name: `Cluster ${cluster}`,\n                x: embeddingsInCluster.map(embedding => embedding.value[this.horizontalAxisDimensionIndex]),\n                y: embeddingsInCluster.map(embedding => embedding.value[this.verticalAxisDimensionIndex]),\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    size: 12,\n                    color: this.generateClusterColor(cluster, clusters.length)\n                },\n                hoverinfo: 'none',\n                attributionIndices: embeddingsInCluster.map(embedding => embedding.attributionIndex),\n                clusterIndex: cluster\n            });\n        }\n    }\n\n    /**\n     * Reloads the project and all its information.\n     */\n    private async refreshProjectAsync(): Promise<void> {\n        this.isLoading = true;\n        this.project = await this.projectsService.getByIdAsync(this.id);\n\n        this.selectedDataPoints = null;\n        this.selectedAnalysisMethod = this.project.analysisMethods[0];\n        this.selectedCategory = this.selectedAnalysisMethod.categories[0];\n        this.selectedClustering = this.selectedAnalysisMethod.clusterings[0];\n        if (this.selectedAnalysisMethod.embeddings.filter(embedding => embedding === 'tsne').length > 0) {\n            this.selectedEmbedding = 'tsne';\n        } else {\n            this.selectedEmbedding = this.selectedAnalysisMethod.embeddings[0];\n        }\n        await this.refreshAnalysisAsync();\n        this.isLoading = false;\n    }\n\n    /**\n     * Reloads the analysis and all its information.\n     */\n    private async refreshAnalysisAsync() {\n\n        if (!this.selectedAnalysisMethod ||\n            !this.selectedCategory ||\n            !this.selectedClustering ||\n            !this.selectedEmbedding\n        ) {\n            return;\n        }\n\n        this.isLoading = true;\n        this.selectedDataPoints = null;\n        this.analysis = await this.analysesService.getAsync(\n            this.project.id,\n            this.selectedAnalysisMethod.name,\n            this.selectedCategory.name,\n            this.selectedClustering,\n            this.selectedEmbedding\n        );\n        this.isLoading = false;\n    }\n\n    /**\n     * Is invoked when the component is initialized. Retrieves the ID of the project from the URL and loads it\n     */\n    public async ngOnInit(): Promise<void> {\n\n        // Subscribes for changes of the route, when the route has changed, then the project ID is retrieved from the\n        // URL and the project is loaded\n        this.route.paramMap.subscribe(paramMap => {\n            if (paramMap.has('id') && paramMap.get('id')) {\n                this.id = parseInt(paramMap.get('id'), 10);\n                this.refreshProjectAsync();\n            }\n        });\n\n        // Loads the color maps from the RESTful API\n        this.colorMaps = await this.colorMapsService.getAsync();\n        const defaultColorMaps = this.colorMaps.filter(colorMap => colorMap.name === 'black-fire-red');\n        if (defaultColorMaps.length > 0) {\n            this.selectedColorMap = defaultColorMaps[0];\n        } else {\n            this.selectedColorMap = this.colorMaps[0];\n        }\n    }\n\n    /**\n     * Is invoked when the user hovers the mouse over an embedding.\n     * @param eventInfo The event object that contains the information about the embedding that the user hovered over.\n     */\n    public async onHoverAsync(eventInfo: any): Promise<void> {\n\n        this.isHovering = true;\n        const attributionIndex = eventInfo.points[0].data.attributionIndices[eventInfo.points[0].pointIndex];\n        const attribution = await this.attributionsService.getAsync(this.project.id, attributionIndex);\n        this.datasetSampleHoverPreview = await this.datasetService.getAsync(this.project.id, attribution.index);\n    }\n\n    /**\n     * Is invoked when the user moves the mouse away from a sample.\n     */\n    public onUnhover(): void {\n        this.isHovering = false;\n        this.datasetSampleHoverPreview = null;\n    }\n\n    /**\n     * Is invoked when the user selects embeddings.\n     * @param eventInfo The event object that contains the information about the embeddings that were selected.\n     */\n    public async onSelectedAsync(eventInfo?: any): Promise<void> {\n\n        // When nothing was selected, then nothing needs to be loaded (this sometimes happens when deselecting)\n        if (!eventInfo) {\n            return;\n        }\n\n        // Gets the attributions of the data points that were selected\n        this.isLoadingSelection = true;\n        console.log(eventInfo.points.map(p => p.data.marker.color));\n        let attributionIndices: Array<number> = eventInfo.points.map(\n            dataPoint => dataPoint.data.attributionIndices[dataPoint.pointIndex]\n        );\n        attributionIndices = attributionIndices.slice(0, 20);\n        const attributions = await Promise.all(attributionIndices.map(\n            index => this.attributionsService.getAsync(this.project.id, index)\n        ));\n\n        // Gets the dataset samples for which the attributions were generated\n        const datasetSamples: Array<Sample> = await Promise.all(attributions.map(\n            attribution => this.datasetService.getAsync(this.project.id, attribution.index)\n        ));\n\n        // Assigns the dataset sample to their respective attribution\n        this.selectedDataPoints = [];\n        for (let index = 0; index < attributions.length; index++) {\n            this.selectedDataPoints.push({\n                attribution: attributions[index],\n                sample: datasetSamples.filter(sample => sample.index === attributions[index].index)[0],\n                color: eventInfo.points[index].data.marker.color,\n                clusterIndex: eventInfo.points[index].data.clusterIndex\n            });\n        }\n        this.isLoadingSelection = false;\n    }\n\n    /**\n     * Is invoked, when the user deselects everything.\n     */\n    public onDeselect(): void {\n        this.selectedDataPoints = null;\n    }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { ClarityModule } from '@clr/angular';\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\nimport { PlotlyModule } from 'angular-plotly.js';\nimport { FormsModule } from '@angular/forms';\n\nimport { ProjectsService } from 'src/services/projects/projects.service';\nimport { projectRoutes } from './projects.routes';\nimport { IndexPage } from './pages/index/index.page';\nimport { AnalysesService } from 'src/services/analyses/analyses.service';\nimport { AttributionsService } from 'src/services/attributions/attributions.service';\nimport { DatasetService } from 'src/services/dataset/dataset.service';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ColorMapsService } from 'src/services/colorMaps/color-maps.service';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\n/**\n * Represents the module that contains the project pages.\n */\n@NgModule({\n    declarations: [\n        IndexPage\n    ],\n    imports: [\n        BrowserModule,\n        ClarityModule,\n        PlotlyModule,\n        FormsModule,\n        ComponentsModule,\n        RouterModule.forChild(projectRoutes)\n    ],\n    exports: [],\n    providers: [\n        ProjectsService,\n        AnalysesService,\n        AttributionsService,\n        DatasetService,\n        ColorMapsService\n    ]\n})\nexport class ProjectsModule { }\n","\nimport { Routes } from '@angular/router';\n\nimport { IndexPage } from './pages/index/index.page';\n\n/**\n * Defines the routes of the projects module.\n */\nexport const projectRoutes: Routes = [\n    { path: 'projects/:id', component: IndexPage }\n];\n","\n// Contains the environment variables for the debug environment\nexport const environment = {\n    production: false,\n\n    apiBaseUrl: 'http://localhost:8080'\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(error => console.error(error));\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nimport { Analysis } from './analysis';\nimport { AnalysisMethod } from '../projects/analysis-method';\n\n/**\n * Represents a service for managing analyses of a project.\n */\n@Injectable()\nexport class AnalysesService {\n\n    /**\n     * Initializes a new AnalysesService instance.\n     * @param httpClient The HTTP client, which is used to interface with the RESTful API.\n     */\n    public constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Gets the specified analysis from the project.\n     * @param projectId The ID of the project from which the analysis is to be retrieved.\n     * @param analysisMethod The name of the analysis method from which the analysis is to be retrieved.\n     * @param category The name of the category from which the analysis is to be retrieved.\n     * @param clustering The name of the clustering that was applied to the analysis.\n     * @param embedding The name of the embedding that was applied to the analysis.\n     */\n    public async getAsync(\n        projectId: number,\n        analysisMethod: string,\n        category: string,\n        clustering: string,\n        embedding: string\n    ): Promise<Analysis> {\n        return await this.httpClient\n            .get<Analysis>(`${environment.apiBaseUrl}/api/projects/${projectId}/analyses/${analysisMethod}?category=${category}&clustering=${clustering}&embedding=${embedding}`, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n            })\n            .pipe(map(analysis => new Analysis(analysis)))\n            .toPromise();\n    }\n}\n","\nimport { Embedding } from './embedding';\n\n/**\n * Represents a single analysis.\n */\nexport class Analysis {\n\n    /**\n     * Initializes a new Analysis instance.\n     * @param analysis The JSON object that was retrieved from the RESTful API.\n     */\n    public constructor(analysis?: any) {\n        if (analysis) {\n            this.categoryName = analysis.categoryName;\n            this.humanReadableCategoryName = analysis.humanReadableCategoryName;\n            this.clusteringName = analysis.clusteringName;\n            this.embeddingName = analysis.embeddingName;\n            if (analysis.embedding) {\n                this.embedding = analysis.embedding.map(embedding => new Embedding(embedding));\n            }\n            this.eigenValues = analysis.eigenValues;\n            this.baseEmbeddingName = analysis.baseEmbeddingName;\n            this.baseEmbeddingAxesIndices = analysis.baseEmbeddingAxesIndices;\n        }\n    }\n\n    /**\n     * Contains the name of the category to which the analysis belongs.\n     */\n    public categoryName: string;\n\n    /**\n     * Contains the human readable name of the category to which the analysis belongs.\n     */\n    public humanReadableCategoryName: string;\n\n    /**\n     * Contains the name of the clustering that was applied to the embedding.\n     */\n    public clusteringName: string;\n\n    /**\n     * Contains the name of the embedding method.\n     */\n    public embeddingName: string;\n\n    /**\n     * Contains the embedding.\n     */\n    public embedding: Array<Embedding>;\n\n    /**\n     * Contains the eigen values of the analysis.\n     */\n    public eigenValues?: Array<number>;\n\n    /**\n     * Contains the name of the embedding on which the embedding was based.\n     */\n    public baseEmbeddingName?: string;\n\n    /**\n     * Contains a list of indices of the axes of the base embedding on which the embedding was based.\n     */\n    public baseEmbeddingAxesIndices?: Array<number>;\n}\n","\n/**\n * Represents a single embedding.\n */\nexport class Embedding {\n\n    /**\n     * Initializes a new Embedding instance.\n     * @param embedding The JSON object that was retrieved from the RESTful service.\n     */\n    public constructor(embedding?: any) {\n        if (embedding) {\n            this.cluster = embedding.cluster;\n            this.attributionIndex = embedding.attributionIndex;\n            this.value = embedding.value;\n        }\n    }\n\n    /**\n     * Contains the index of the cluster to which the embedding belongs.\n     */\n    public cluster: number;\n\n    /**\n     * Contains the index of the attribution of the embedding.\n     */\n    public attributionIndex: number;\n\n    /**\n     * Contains the value of the embedding.\n     */\n    public value: Array<number>;\n}\n","import { Sample } from '../dataset/sample';\n\n/**\n * Represents a single attribution.\n */\nexport class Attribution {\n\n    /**\n     * Initializes a new Attribution instance.\n     * @param attribution The JSON object that was retrieved from the RESTful API.\n     * @param baseUrl The base URL that is added to the heatmap URLs.\n     */\n    public constructor(attribution?: any, baseUrl?: string) {\n        if (attribution) {\n            this.index = attribution.index;\n            this.labels = attribution.labels;\n            this.prediction = attribution.prediction;\n            this.width = attribution.width;\n            this.height = attribution.height;\n            this.url = attribution.url;\n            this.urls = attribution.urls;\n            if (baseUrl) {\n                this.url = baseUrl + this.url;\n                for (const colorMap in this.urls) {\n                    if (this.urls.hasOwnProperty(colorMap)) {\n                        this.urls[colorMap] = baseUrl + this.urls[colorMap];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Contains the index of the dataset sample for which the attribution was generated.\n     */\n    public index: number;\n\n    /**\n     * Contains the true labels of the dataset sample for which the attribution was generated.\n     */\n    public labels: string | Array<string>;\n\n    /**\n     * Gets a comma-separated list of all labels, which can be used for displaying the labels.\n     */\n    public get labelDisplay(): string {\n        if (Array.isArray(this.labels)) {\n            return this.labels.join(', ');\n        }\n        return this.labels;\n    }\n\n    /**\n     * Contains the output of the model for the dataset sample for which the attribution was generated.\n     */\n    public prediction: Array<number>;\n\n    /**\n     * The width of the attribution heatmap image.\n     */\n    public width: number;\n\n    /**\n     * The height of the attribution heatmap image.\n     */\n    public height: number;\n\n    /**\n     * Contains the URL to the heatmap for the attribution with a default color map.\n     */\n    public url: string;\n\n    /**\n     * Contains the URLs to the heatmaps for the attribution for all supported color maps.\n     */\n    public urls: { [colorMap: string]: string; };\n}\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Attribution } from './attribution';\n\n/**\n * Represents a service for managing attributions of a project.\n */\n@Injectable()\nexport class AttributionsService {\n\n    /**\n     * Initializes a new AttributionsService instance.\n     * @param httpClient The HTTP client, which is used to interface with the RESTful API.\n     */\n    public constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Gets the attribution with the specified index.\n     * @param projectId The ID of the project from which the attribution is to be retrieved.\n     * @param index The index of the attribution that is to be retrieved.\n     */\n    public async getAsync(projectId: number, index: number): Promise<Attribution> {\n        return await this.httpClient\n            .get<Attribution>(`${environment.apiBaseUrl}/api/projects/${projectId}/attributions/${index}`, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n            })\n            .pipe(map(attribution => new Attribution(attribution, environment.apiBaseUrl)))\n            .toPromise();\n    }\n}\n","\n/**\n * Represents a color map that can be used to render heatmaps.\n */\nexport class ColorMap {\n\n    /**\n     * Initializes a new ColorMap instance.\n     * @param colorMap The JSON object that was retrieved from the RESTful API.\n     * @param baseUrl The base URL that is added to the heatmap URLs.\n     */\n    public constructor(colorMap?: any, baseUrl?: string) {\n        if (colorMap) {\n            this.name = colorMap.name;\n            this.humanReadableName = colorMap.humanReadableName;\n            this.url = colorMap.url;\n\n            if (baseUrl) {\n                this.url = baseUrl + this.url;\n            }\n        }\n    }\n\n    /**\n     * Represents the internal name of the color map.\n     */\n    public name: string;\n\n    /**\n     * Contains a human-readable version of the name of the color map.\n     */\n    public humanReadableName: string;\n\n    /**\n     * Contains the URL for a preview image of the color map.\n     */\n    public url: string;\n}\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ColorMap } from './color-map';\n\n/**\n * Represents a service for managing color maps.\n */\n@Injectable()\nexport class ColorMapsService {\n\n    /**\n     * Initializes a new ColorMapsService instance.\n     * @param httpClient The HTTP client, which is used to interface with the RESTful API.\n     */\n    public constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Gets all color maps.\n     */\n    public async getAsync(): Promise<Array<ColorMap>> {\n        return await this.httpClient\n            .get<Array<ColorMap>>(`${environment.apiBaseUrl}/api/color-maps`, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n            })\n            .pipe(map(colorMaps => colorMaps.map(colorMap => new ColorMap(colorMap, environment.apiBaseUrl))))\n            .toPromise();\n    }\n}\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Sample } from './sample';\n\n/**\n * Represents a service for managing dataset samples of a project.\n */\n@Injectable()\nexport class DatasetService {\n\n    /**\n     * Initializes a new DatasetService instance.\n     * @param httpClient The HTTP client, which is used to interface with the RESTful API.\n     */\n    public constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Gets the dataset sample with the specified index.\n     * @param projectId The ID of the project from which the dataset sample is to be retrieved.\n     * @param index The index of the dataset sample that is to be retrieved.\n     */\n    public async getAsync(projectId: number, index: number): Promise<Sample> {\n        return await this.httpClient\n            .get<Sample>(`${environment.apiBaseUrl}/api/projects/${projectId}/dataset/${index}`, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n            })\n            .pipe(map(sample => new Sample(sample, environment.apiBaseUrl)))\n            .toPromise();\n    }\n}\n","\n/**\n * Represents a single sample from the dataset for which the analyses were performed.\n */\nexport class Sample {\n\n    /**\n     * Initializes a new Sample instance.\n     * @param sample The JSON object that was retrieved from the RESTful API.\n     * @param baseUrl The base URL that is added to the image URL.\n     */\n    public constructor(sample?: any, baseUrl?: string) {\n        if (sample) {\n            this.index = sample.index;\n            this.labels = sample.labels;\n            this.width = sample.width;\n            this.height = sample.height;\n            this.url = sample.url;\n            if (baseUrl) {\n                this.url = baseUrl + this.url;\n            }\n        }\n    }\n\n    /**\n     * Contains the index of the dataset sample.\n     */\n    public index: number;\n\n    /**\n     * Contains the true labels of the dataset sample.\n     */\n    public labels: string | Array<string>;\n\n    /**\n     * Gets a comma-separated list of all labels, which can be used for displaying the labels.\n     */\n    public get labelDisplay(): string {\n        if (Array.isArray(this.labels)) {\n            return this.labels.join(', ');\n        }\n        return this.labels;\n    }\n\n    /**\n     * The width of the sample image.\n     */\n    public width: number;\n\n    /**\n     * The height of the sample image.\n     */\n    public height: number;\n\n    /**\n     * Contains the URL to the image of the dataset sample.\n     */\n    public url: string;\n}\n","\n/**\n * Represents a single category in an analysis. One category can contain many analyses for different attributions. The\n * category name is usually an umbrella term for all the attributions contained in the analysis. This is most-likely\n * a class name.\n */\nexport class AnalysisCategory {\n\n    /**\n     * Initializes a new AnalysisCategory instance.\n     * @param analysisCategory The JSON object that was retrieved from the RESTful API.\n     */\n    public constructor(analysisCategory?: any) {\n        if (analysisCategory) {\n            this.name = analysisCategory.name;\n            this.humanReadableName = analysisCategory.humanReadableName;\n        }\n    }\n\n    /**\n     * Contains the name of the category, which is usually a label index or a WordNet ID.\n     */\n    public name: string;\n\n    /**\n     * Contains a human-readable version of the category name, which is usually a label name.\n     */\n    public humanReadableName: string;\n}\n","\nimport { AnalysisCategory } from './analysis-category';\n\n/**\n * Represents an analysis method.\n */\nexport class AnalysisMethod {\n\n    /**\n     * Initializes a new AnalysisMethod instance.\n     * @param analysisMethod The JSON object that was retrieved from the RESTful API.\n     */\n    public constructor(analysisMethod?: any) {\n        if (analysisMethod) {\n            this.name = analysisMethod.name;\n            if (analysisMethod.categories) {\n                this.categories = analysisMethod.categories.map(category => new AnalysisCategory(category));\n            }\n            this.clusterings = analysisMethod.clusterings;\n            this.embeddings = analysisMethod.embeddings;\n        }\n    }\n\n    /**\n     * Contains the name of the analysis method.\n     */\n    public name: string;\n\n    /**\n     * Contains the names of the categories that are in the analysis.\n     */\n    public categories: Array<AnalysisCategory>;\n\n    /**\n     * Contains the names of the clusterings that are in the analysis.\n     */\n    public clusterings: Array<string>;\n\n    /**\n     * Contains the names of the embeddings that are in the analysis.\n     */\n    public embeddings: Array<string>;\n}\n","\nimport { AnalysisMethod } from './analysis-method';\n\n/**\n * Represents a single project from the workspace.\n */\nexport class Project {\n\n    /**\n     * Initializes a new Project instance.\n     * @param project The JSON object that was retrieved from the RESTful API.\n     */\n    public constructor(project?: any) {\n        if (project) {\n            this.id = project.id;\n            this.name = project.name;\n            this.model = project.model;\n            this.dataset = project.dataset;\n            if (project.analysisMethods) {\n                this.analysisMethods = project.analysisMethods.map(analysisMethod => new AnalysisMethod(analysisMethod));\n            }\n        }\n    }\n\n    /**\n     * Contains the ID of the project.\n     */\n    public id: number;\n\n    /**\n     * Contains the name of the project.\n     */\n    public name: string;\n\n    /**\n     * Contains the name of the machine learning model on which the project is based.\n     */\n    public model: string;\n\n    /**\n     * Contains the name of the dataset on which the model was trained.\n     */\n    public dataset: string;\n\n    /**\n     * Contains the analysis methods supported by the project.\n     */\n    public analysisMethods: Array<AnalysisMethod>;\n}\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nimport { Project } from './project';\n\n/**\n * Represents a service for managing projects in the current workspace.\n */\n@Injectable()\nexport class ProjectsService {\n\n    /**\n     * Initializes a new ProjectsService instance.\n     * @param httpClient The HTTP client, which is used to interface with the RESTful API.\n     */\n    public constructor(private httpClient: HttpClient) { }\n\n    /**\n     * Gets all projects from the current workspace.\n     */\n    public async getAsync(): Promise<Array<Project>> {\n        return await this.httpClient\n            .get<Array<Project>>(`${environment.apiBaseUrl}/api/projects`, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n            })\n            .pipe(map(projects => projects.map(project => new Project(project))))\n            .toPromise();\n    }\n\n    /**\n     * Gets the project with the specified ID.\n     * @param id The ID of the project that is to be retrieved.\n     */\n    public async getByIdAsync(id: number): Promise<Project> {\n        return await this.httpClient\n            .get<Project>(`${environment.apiBaseUrl}/api/projects/${id}`, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n            })\n            .pipe(map(project => new Project(project)))\n            .toPromise();\n    }\n}\n"],"sourceRoot":"webpack:///"}